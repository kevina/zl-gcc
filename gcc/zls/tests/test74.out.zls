# type decls
(talias FILE (struct _IO_FILE))
(talias size_t (unsigned-int))
(talias bool (int))
(talias EnvironSnapshot (struct EnvironSnapshot))
(talias Mark (struct Mark))
(.struct UnmarkedSyntax)
(.struct Syntax)
(.struct SyntaxList)
(.struct SyntaxEnum)
(.struct Match)
(talias Context (struct Context))
(talias Environ (struct Environ))
(.enum _s_0_)
(talias Position (enum _s_0_))
(.struct UserTypeInfo)
(.struct ModuleInfo)
# type definitions
(.enum _s_0_
   (NoPos 0)
   (OtherPos 1)
   (TopLevel 2)
   (FieldPos 4)
   (StmtDeclPos 8)
   (StmtPos 16)
   (ExpPos 32)
)
# function decls
(fun printf (. ((.ptr (char :const)) ) ...) (int))
(fun snprintf (. ((.ptr (char :const)) str) ((size_t) size) ((.ptr (char :const)) format) ...) (int))
(fun strcmp (. ((.ptr (char :const)) s1) ((.ptr (char :const)) s2)) (int))
(fun parse_class (. ((.ptr (struct Syntax)) p) ((.ptr (Environ)) env)) (.ptr (struct Syntax)))
(fun fabs (. ((double) x)) (double))
(fun main (.) (int))
# definitions
(var r (double) (f 0x1.9e3779beddcbdp+0 (double)))
(fun main (.) (int) (block
  (var q$1 (double) (f 0x1.8p+1 (double)))
  (var r$1 (double) (f 0x1p+1 (double)))
  (block
    (local_label break$1)
    (local_label continue$1)
    (noop)
  (label loop$$1)
    (if (not 1)
      (goto break$1)
    )
    (block
      (var a$1 (double) q$1)
      (var b$1 (double) r$1)
      (var a$2 (double) (div (minus a$1 (times r b$1)) (plus (cast (double) 1) r)))
      (if (gt (call fabs (. (div a$2 (plus a$1 b$1)))) (f 0x1.47ae147ae147bp-7 (double)))
        (block
          (c-assign minus q$1 a$2)
          (c-assign plus r$1 a$2)
        )
        (goto break$1)
      )
    )
  (label continue$1)
    (noop)
    (goto loop$$1)
  (label break$1)
  )
  (call printf (. (s "%f %f\n") q$1 r$1))
)
)
# special
# done
