# type decls
(talias FILE (struct _IO_FILE))
(talias size_t (unsigned-int))
(talias bool (int))
(talias EnvironSnapshot (struct EnvironSnapshot))
(talias Mark (struct Mark))
(.struct UnmarkedSyntax)
(.struct Syntax)
(.struct SyntaxList)
(.struct SyntaxEnum)
(.struct Match)
(talias Context (struct Context))
(talias Environ (struct Environ))
(.enum _s_0_)
(talias Position (enum _s_0_))
(.struct UserTypeInfo)
(.struct ModuleInfo)
# type definitions
(.enum _s_0_
   (NoPos 0)
   (OtherPos 1)
   (TopLevel 2)
   (FieldPos 4)
   (StmtDeclPos 8)
   (StmtPos 16)
   (ExpPos 32)
)
# function decls
(fun printf (. ((.ptr (char :const)) ) ...) (int))
(fun snprintf (. ((.ptr (char :const)) str) ((size_t) size) ((.ptr (char :const)) format) ...) (int))
(fun strcmp (. ((.ptr (char :const)) s1) ((.ptr (char :const)) s2)) (int))
(fun parse_class (. ((.ptr (struct Syntax)) p) ((.ptr (Environ)) env)) (.ptr (struct Syntax)))
(fun main (.) (int))
# definitions
(fun main (.) (int) (block
  (var x$1 (int) 0)
  (var z$1 (int))
  (var z$2 (int) 0)
  (assign z$2 20)
  (var y$1 (int) z$2)
  (c-assign plus y$1 1)
  (assign y$1 (plus (c-assign times y$1 2) 4))
  (block
    (local_label break$1)
    (local_label continue$1)
    (noop)
  (label loop$$1)
    (if (not 1)
      (goto break$1)
    )
    (plus x$1 1)
  (label continue$1)
    (noop)
    (goto loop$$1)
  (label break$1)
  )
  (if x$1
    (block
      (c-assign times x$1 20)
      (c-assign times y$1 30)
    )
    (c-assign times y$1 2)
  )
  (assign z$1 (plus 5 5))
  (assign z$1 (times (plus 2 3) (plus 2 3)))
  (plus (times y$1 y$1) (times y$1 y$1))
)
)
# special
# done
