# type decls
(talias FILE (struct _IO_FILE))
(talias size_t (unsigned-int))
(talias bool (int))
(talias EnvironSnapshot (struct EnvironSnapshot))
(talias Mark (struct Mark))
(.struct UnmarkedSyntax)
(.struct Syntax)
(.struct SyntaxList)
(.struct SyntaxEnum)
(.struct Match)
(talias Context (struct Context))
(talias Environ (struct Environ))
(.enum _s_0_)
(talias Position (enum _s_0_))
(.struct UserTypeInfo)
(.struct ModuleInfo)
# type definitions
(.enum _s_0_
   (NoPos 0)
   (OtherPos 1)
   (TopLevel 2)
   (FieldPos 4)
   (StmtDeclPos 8)
   (StmtPos 16)
   (ExpPos 32)
)
# function decls
(fun printf (. ((.ptr (char :const)) ) ...) (int))
(fun snprintf (. ((.ptr (char :const)) str) ((size_t) size) ((.ptr (char :const)) format) ...) (int))
(fun strcmp (. ((.ptr (char :const)) s1) ((.ptr (char :const)) s2)) (int))
(fun parse_class (. ((.ptr (struct Syntax)) p) ((.ptr (Environ)) env)) (.ptr (struct Syntax)))
(fun f0 (.) (int))
(fun f1 (. ((int) x)) (int))
(fun f2 (. ((int) x) ((int) y)) (int))
(fun main (.) (int))
# definitions
(fun f0 (.) (int) (block
  (return 0)
)
)
(fun f1 (. ((int) x)) (int) (block
  (return (times x 2))
)
)
(fun f2 (. ((int) x) ((int) y)) (int) (block
  (return (plus x y))
)
)
(fun main (.) (int) (block
  (return (plus (plus (call f0 (.)) (call f1 (. 1))) (call f2 (. 2 3))))
)
)
# special
# done
