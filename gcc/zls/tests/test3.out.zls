# type decls
(talias FILE (struct _IO_FILE))
(talias size_t (unsigned-int))
(talias bool (int))
(talias EnvironSnapshot (struct EnvironSnapshot))
(talias Mark (struct Mark))
(.struct UnmarkedSyntax)
(.struct Syntax)
(.struct SyntaxList)
(.struct SyntaxEnum)
(.struct Match)
(talias Context (struct Context))
(talias Environ (struct Environ))
(.enum _s_0_)
(talias Position (enum _s_0_))
(.struct UserTypeInfo)
(.struct ModuleInfo)
# type definitions
(.enum _s_0_
   (NoPos 0)
   (OtherPos 1)
   (TopLevel 2)
   (FieldPos 4)
   (StmtDeclPos 8)
   (StmtPos 16)
   (ExpPos 32)
)
# function decls
(fun printf (. ((.ptr (char :const)) ) ...) (int))
(fun snprintf (. ((.ptr (char :const)) str) ((size_t) size) ((.ptr (char :const)) format) ...) (int))
(fun strcmp (. ((.ptr (char :const)) s1) ((.ptr (char :const)) s2)) (int))
(fun parse_class (. ((.ptr (struct Syntax)) p) ((.ptr (Environ)) env)) (.ptr (struct Syntax)))
(fun foo (.) (void))
(fun foo2 (.) (void))
(fun main (.) (int))
# definitions
(fun main (.) (int) (block
  (var x$1 (int) 0)
  (block
    (local_label break$1)
    (local_label continue$1)
  (label continue$1)
    (if (not (eif (ne x$1 20) (eif (ne x$1 30) 1 (ne x$1 40)) 0))
      (goto break$1)
    )
    (c-assign plus x$1 1)
    (goto continue$1)
  (label break$1)
  )
  (block
    (local_label break$1)
    (local_label continue$1)
    (var i$1 (int) 9)
    (var j$1 (int) 11)
  (label loop$$1)
    (if (not 1)
      (goto break$1)
    )
    (block
      (assign x$1 (plus i$1 x$1))
    )
  (label continue$1)
    (noop)
    (goto loop$$1)
  (label break$1)
  )
  (c-assign bor x$1 3)
)
)
# special
# done
